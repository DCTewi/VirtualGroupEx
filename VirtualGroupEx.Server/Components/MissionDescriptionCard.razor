@inject MissionService MissionService
@inject UserInfoService UserInfo
@inject PreferenceService Preference

@code
{
    [Parameter] public Mission Mission { get; set; }

    protected List<MissionColumn> GetSectionColumns(int sectionId)
    {
        var section = MissionService.GetSectionIncludingColumns(sectionId);
        section?.MissionColumns?.Sort((a, b) =>
        {
            if (a.SkillPoint == b.SkillPoint)
            {
                return a.Id.CompareTo(b.Id);
            }
            else
            {
                return a.SkillPoint.CompareTo(b.SkillPoint);
            }
        });
        return section?.MissionColumns;
    }

    protected Dictionary<SkillPoint, List<string>> GetCollectedStaff()
    {
        var result = new Dictionary<SkillPoint, List<string>>();

        foreach (var section in Mission.Sections)
        {
            var cols = GetSectionColumns(section.Id);
            if ((cols?.Count ?? 0) > 0)
            {
                foreach (var col in cols)
                {
                    if (!result.ContainsKey(col.SkillPoint))
                    {
                        result[col.SkillPoint] = new();
                    }

                    var nickname = UserInfo.GetUserById(col.UserId).NickName;
                    result[col.SkillPoint].Add(nickname);
                }
            }
        }

        return result;
    }
}

@if (Mission?.Sections != null)
{
    var staffs = GetCollectedStaff();

    <div class="card card-body shadow-sm my-2">
        <div class="text-monospace text-secondary">
            <p>
                @((~Preference).DescriptionOriginPrefix)
                @Mission.OriginInfo
                @((~Preference).DescriptionOriginPostfix) <br />
            </p>

            <p>
                @foreach (var spStaff in staffs)
                {
                    <span>
                        @($"{localizer[$"sp.{spStaff.Key}"]}: {string.Join(", ", spStaff.Value)}")
                    </span>
                    <br />
                }
            </p>

            @if (!string.IsNullOrEmpty((~Preference).DescriptionPostfix))
            {
                <p>
                    @((MarkupString)Markdig.Markdown.ToHtml((~Preference).DescriptionPostfix))
                </p>
            }
        </div>
    </div>
}
