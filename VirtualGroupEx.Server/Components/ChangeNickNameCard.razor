@inject CurrentUserService CurrentUser
@inject UserManager<User> UserManager
@inject SignInManager<User> SignInManager
@inject JSInvokeService Js
@inject ILogger<ChangePasswordCard> Logger
@inject NavigationManager NavigationManager 

@code
{
    public class InputModel
    {
        [Required, MaxLength(30)]
        public string NickName { get; set; }
    }

    private InputModel input;
    private bool actionError = false;
    private ActionWaiter waiter = new ActionWaiter();


    protected override void OnInitialized()
    {
        input = new InputModel
        {
            NickName = CurrentUser.User.NickName
        };
    }

    public async Task OnSubmitAsync()
    {
        if (waiter.CantInvoke) return;

        await CurrentUser.ChangeNickNameAsync(input.NickName);

        input = new InputModel
        {
            NickName = CurrentUser.User.NickName
        };
        await Js.ResetButtonAsync();

        waiter.EndInvoke();

        NavigationManager.NavigateTo("/me", forceLoad: true);
    }
}

@if (actionError)
{
    <div class="alert alert-danger alert-dismissible" role="alert">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        <strong>@localizer["msg.changenickFailed"]</strong>
    </div>
}

<h2>
    @localizer["user.info"]
</h2>

<EditForm Model="input"
          OnValidSubmit="OnSubmitAsync">
    <DataAnnotationsValidator></DataAnnotationsValidator>

    <p class="form-group">
        <label>@localizer["user.username"]</label>
        <input class="form-control" placeholder="@CurrentUser.User.UserName" disabled />
    </p>

    <p class="form-group">
        <label>@localizer["user.qq"]</label>
        <input class="form-control" placeholder="@CurrentUser.User.Qid.ToString()" disabled />
    </p>

    <p class="form-group">
        <label>@localizer["user.nickname"]</label>
        <InputText @bind-Value="input.NickName" class="form-control"></InputText>
        <ValidationMessage For="@(() => input.NickName)"></ValidationMessage>
    </p>

    <button class="btn btn-outline-primary" type="submit"
            id="changeNickBtn" onclick="setButtonBuzy('changeNickBtn')">
        @localizer["operation.apply"]
    </button>

</EditForm>
